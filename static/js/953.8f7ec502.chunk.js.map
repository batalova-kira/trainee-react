{"version":3,"file":"static/js/953.8f7ec502.chunk.js","mappings":"oPA+EA,UAtEkB,WAChB,IAAAA,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAjDG,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAWC,EAAAA,EAAAA,MAGXC,EAAajB,EAAakB,IAAI,SA8BpC,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGR,OAHQF,EAAAC,KAAA,EAEvBlB,GAAa,GACbI,EAAS,MAAMa,EAAAE,KAAA,EACQC,EAAAA,EAAAA,IAAU,8CAADC,OACgBd,IAC9C,KAAD,EAAAQ,EAAAE,EAAAK,KAFON,EAAID,EAAJC,KAIRpB,EAAiB,CAACoB,IAAOC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEzBb,EAASa,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAExBlB,GAAa,GAAOiB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,yBAEvB,kBAduB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAgBxBlB,GAjBuB,CAkBzB,GAAG,CAACH,KAGFsB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SA7BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASC,UAAUH,MACjD3C,EAAgB,CAAE+C,MAAOJ,GAC3B,EAyBiCJ,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACES,EAAAA,EAAAA,KAAA,QAAAT,SAAM,wBACNS,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,YAAYC,UAAQ,EAACC,YAAY,WAE3DJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQV,SAAC,mBAEb,OAAV3B,IAAkBoC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYd,SAAE3B,IAC7CJ,IAAawC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,IACF,OAAlBlD,GACCA,EAAcmD,KAAI,SAAAC,GAChB,OACER,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAM7C,GAEf8C,GAAE,UAAA9B,OAAY0B,EAAKK,IAAKtB,UAExBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACES,EAAAA,EAAAA,KAAA,MAAAT,SAAKiB,EAAKM,SACVxB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASiB,EAAKK,OAClBb,EAAAA,EAAAA,KAAA,QAAAT,SAAOiB,EAAKO,WANTP,EAAKK,GAUhB,MAGR,C","sources":["pages/PostsPage.jsx"],"sourcesContent":["// import axios from 'axios';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\n// rcc - react class component\n// rafce - react arrow function expression component export default\n\nconst PostsPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedPosts, setSearchedPosts] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  // ?query=123\n  const queryValue = searchParams.get('query'); // '123'\n  // CTRL + SHIFT + L\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetchSearchedPosts = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { data } = await axios.get(\n          `https://jsonplaceholder.typicode.com/posts/${queryValue}`\n        );\n        // ВАМ ПОТРІБНО БУДЕ ПРОСТО ЗРОБИТИ setSearchedPosts(data)\n        setSearchedPosts([data]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchedPosts();\n  }, [queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <label>\n          <span>Search post by id:</span>\n          <input type=\"text\" name=\"searchKey\" required placeholder=\"12\" />\n        </label>\n        <button type=\"submit\">Search post</button>\n      </form>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {searchedPosts !== null &&\n        searchedPosts.map(post => {\n          return (\n            <Link\n              state={{ from: location }}\n              key={post.id}\n              to={`/posts/${post.id}`}\n            >\n              <div>\n                <h2>{post.title}</h2>\n                <h3>PostId: {post.id}</h3>\n                <code>{post.body}</code>\n              </div>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default PostsPage;\n"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedPosts","setSearchedPosts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","queryValue","get","useEffect","fetchSearchedPosts","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","value","currentTarget","elements","searchKey","query","_jsx","type","name","required","placeholder","className","Loader","map","post","Link","state","from","to","id","title","body"],"sourceRoot":""}