{"version":3,"file":"static/js/20.cb83ee6f.chunk.js","mappings":"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","sources":["pages/PostsPages.styled.js","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledPosts = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 15px;\n\n  .loader {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n  }\n\n  .postList {\n    list-style: none;\n    padding: 0;\n    max-width: 450px;\n  }\n  .postListItem {\n    padding: 20px;\n    border: 2px solid black;\n    margin-bottom: 25px;\n    cursor: pointer;\n  }\n  .itemTitle {\n    margin-top: 0;\n    margin-bottom: 15px;\n  }\n  .itemBody {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .error-bage {\n    padding: 25px;\n    border: 1px solid blue;\n    background-color: orange;\n    margin-bottom: 20px;\n    font-size: 20px;\n  }\n\n  .listWrapper {\n    display: flex;\n    gap: 20px;\n  }\n\n  .commentsList {\n    list-style: none;\n    padding: 0;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    position: sticky;\n    top: 15px;\n    max-height: 100vh;\n    /* overflow: overlay; */\n  }\n\n  .commentsListItem {\n    padding: 20px;\n    border: 2px solid green;\n    margin-bottom: 25px;\n  }\n\n  .commentTitle {\n    margin-top: 0;\n    margin-bottom: 15px;\n  }\n  .commentEmail {\n    margin-top: 0;\n    margin-bottom: 15px;\n  }\n\n  .commentBody {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n","import axios from 'axios';\nimport React from 'react';\n\nimport { StyledPosts } from './PostsPages.styled';\nimport Loader from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\n\nexport class HomePage extends React.Component {\n  state = {\n    posts: null,\n    comments: null,\n    selectedPostId: null,\n\n    isLoading: false,\n    error: null,\n  };\n\n  fetchPosts = async () => {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      const { data } = await axios.get(\n        'https://jsonplaceholder.typicode.com/posts'\n      );\n\n      this.setState({\n        posts: data,\n      });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  fetchPostComments = async () => {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n      const { data } = await axios.get(\n        `https://jsonplaceholder.typicode.com/comments?postId=${this.state.selectedPostId}`\n      );\n\n      this.setState({\n        comments: data,\n      });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  onSelecPostId = postId => {\n    this.setState({\n      selectedPostId: postId,\n    });\n  };\n\n  componentDidMount() {\n    this.fetchPosts();\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.selectedPostId !== this.state.selectedPostId) {\n      this.fetchPostComments();\n    }\n  }\n\n  render() {\n    return (\n      <StyledPosts>\n        <h1>HTTP-requests</h1>\n\n        {this.state.error !== null && (\n          <p className=\"error-bage\">\n            Oops, some error occured... Error message: {this.state.error}\n          </p>\n        )}\n        {this.state.isLoading && <Loader />}\n        <div className=\"listWrapper\">\n          <ul className=\"postList\">\n            {this.state.posts !== null &&\n              this.state.posts.map(post => {\n                return (\n                  <li\n                    key={post.id}\n                    // onClick={() => this.onSelecPostId(post.id)}\n                    className=\"postListItem\"\n                  >\n                    <Link to={`/posts/${post.id}`}>\n                      <h2 className=\"itemTitle\">{post.title}</h2>\n                      <p className=\"itemBody\">\n                        <b>Body:</b> {post.body}\n                      </p>\n                    </Link>\n                  </li>\n                );\n              })}\n          </ul>\n          <ul className=\"commentsList\">\n            {this.state.selectedPostId !== null && (\n              <li className=\"commentsListItem\">\n                Selected post id: {this.state.selectedPostId}\n              </li>\n            )}\n            {this.state.comments !== null &&\n              this.state.comments.map(comment => {\n                return (\n                  <li key={comment.id} className=\"commentsListItem\">\n                    <h2 className=\"commentTitle\">Name: {comment.name}</h2>\n                    <h3 className=\"commentEmail\">Email: {comment.email}</h3>\n                    <p className=\"commentBody\">\n                      <b>Body:</b> {comment.body}\n                    </p>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </StyledPosts>\n    );\n  }\n}\n\nexport default HomePage;\n"],"names":["StyledPosts","styled","_templateObject","_taggedTemplateLiteral","HomePage","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","posts","comments","selectedPostId","isLoading","error","fetchPosts","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","setState","axios","sent","t0","message","finish","stop","fetchPostComments","_callee2","_yield$axios$get2","_context2","onSelecPostId","postId","_createClass","key","value","this","_","prevState","_jsxs","children","_jsx","className","Loader","map","post","Link","to","id","title","body","comment","name","email","React"],"sourceRoot":""}